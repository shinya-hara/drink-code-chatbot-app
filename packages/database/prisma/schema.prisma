// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id   String   @id @db.Uuid
  type UserType

  chatRooms         UsersChatRooms[]
  chatMessages      ChatMessage[]
  AutoReplyMessages AutoReplyMessage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserType {
  USER
  BOT
}

model ChatRoom {
  // TODO: idのデフォルト値を設定する
  id   String @id @db.Uuid
  name String

  users       UsersChatRooms[]
  chatMessage ChatMessage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UsersChatRooms {
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.Uuid
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId String   @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, chatRoomId])
}

model ChatMessage {
  id      Int  @id @default(autoincrement())
  content Json @db.JsonB

  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.Uuid
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId String   @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AutoReplyMessage {
  id      Int  @id @default(autoincrement())
  content Json @db.JsonB
  trigger Json @db.JsonB

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
